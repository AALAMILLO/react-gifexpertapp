{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototypes","Proptypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAlBc,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,aAwB9BZ,EAAYe,WAAa,CACrBd,cAAee,IAAUC,KAAKC,Y,mCCjCrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEyCC,UAAUH,GAFnD,+DAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIKA,EAAUC,OAJf,uBAIZC,EAJY,EAIZA,KACDC,EAAYD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EAC5B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,wBAAf,UACI,qBAAKC,IAAOjB,EAAKkB,IAAOR,IACxB,4BAAIA,QCLHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACP1B,EAAQC,GACH0B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAACtB,IAEGuB,EDdwBK,CAAa5B,GAAhCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAKtB,IACJsB,EAAU,mBAAGJ,UAAY,6BAAf,qBAA0D,KACrE,qBAAKA,UAAY,YAAjB,SACI,6BAEQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADGA,EAAIC,eEb9BkB,EAAe,WAGxB,MAAoC/C,mBAAS,CAAC,gBAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAEA,OACI,qCACG,+CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACC,6BAEQiD,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAYA,GADLA,Y,MCZnC+B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9f9200ae.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Proptypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n       setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length >2){\r\n            setcategories(cats =>[ inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type = 'text'\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.prototypes = {\r\n    setcategories: Proptypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n\r\n    const url       = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=5hGGnuT2Nk1o3sJ223yQ6laZ4Fy6IKeK`;\r\n    const respuesta = await fetch(url);\r\n    const {data}    = await respuesta.json();\r\n    const gifs      = data.map(img=>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}   \r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className='card animate__flipInX'>\r\n            <img src = {url} alt = {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading ? <p className = 'animate__lightSpeedInRight'>Loading</p> : null}\r\n            <div className = 'card-grid'>\r\n                <ol>\r\n                    {\r\n                        images.map(img => (\r\n                            <GifGridItem \r\n                                key = {img.id}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }            \r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n        });\r\n    }, [category]);    \r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setcategories] = useState([\"Dragon Ball\"]);\r\n\r\n    return (\r\n        <>\r\n           <h2>GifExpert App</h2> \r\n           <AddCategory setcategories = { setcategories } />\r\n           <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n \nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n  \n);\n"],"sourceRoot":""}